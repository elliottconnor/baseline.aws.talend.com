//
// Hosts configuration
//

installation_folders {

  windows {
    root = "c:/talend"                 // Installation root
    talend = "$root/6.3.1"             // Where Talend components will be installed.
    data = "$root/data/6.3.1"          // Where Talend post installation generated data will be stored (logs, reports, generated jobs, ...).
    dependencies = "$root/dependencies"// Where Talend dependencies will be installed (tomcat, ...).
  }

  unix {
    root = "/opt/talend"               // Installation root
    talend = "$root/6.3.1"             // Where Talend components will be installed.
    data = "/var/talend/6.3.1"         // Where Talend post installation generated data will be stored (logs, reports, generated jobs, ...).
    dependencies = "$root/dependencies"// Where Talend dependencies will be installed (tomcat, ...).

    // Installation ownership
    ownership{
      owner = "talend"
      // If required, change the ownership to the above user after the installation.
      change_owner= true
      // chown command used by default. Uncomment and modify if necessary
      //chown_cmd="sudo chown -R <owner>:<owner> <Installation root folder>"

      new_user {
        // If adduser = true, a user will be create before the installation based on the info provided below
        adduser = true

        //-------------------------------------------------------
        username = "talend"
        // group: Leave blank to use the default group (same as username),
        // otherwise the group will be created if it doesn't exist.
        group = ""

        //default password: "talendpwd"
        password = "talendpwd"

        home = "" // Default value if blank
        shell = ""  // Default value if blank
        comment = "Talend installation owner"

        // The creation of the new user command line used internally includes:
        // - Creation of 'group' if non provided and different from username. The command won't fail if group already exists.
        // - Creation of the user with all optional options if available (home, shell, comment,..) and with the right group (default or the provided one).
        //
        // To overwrite the default command, uncomment the newuer_cmd and modify it accordingly to be executed instead.
        // Important: Escape any '$' as '\$'.
        //newuser_cmd="sudo groupadd -f <group>; sudo useradd -c '<comment>' -p \$(openssl passwd -1 <password>) -U <username> or -G <group>; usermod -aG whell <username>"
      }
    }
  }

  osx {
    root = "/Applications/talend"      // Installation root
    talend = "$root/6.3.1"             // Where Talend components will be installed.
    data = "/var/talend/6.3.1"         // Where Talend related data will be stored (logs, reports, generated jobs, ...).
    dependencies = "$root/dependencies"// Where Talend dependencies will be installed (tomcat, ...).
  }
}

// Service configuration for all components
// For granular configuration, see configuration.conf file
services {
  // !!Recommended: Uses by default the owner of the installation folders
  // Linux Only
  user = "${installation_folders.unix.ownership.owner}"

  // !!Recommended: Uses by default the owner group of the installation folders
  // Linux Only
  group= "${installation_folders.unix.ownership.new_user.group}"

  // !!Recommended: By default, install all services
  install = true
  // !!Recommended: By default, start all services after the installation
  start = true
}

//
// List of host aliases and definitions used for remote installation.
// !!!!!!!!!!!!!
// Only SSH based install is currently supported for remote install. Remote install for Windows is not supported yet.
// !!!!!!!!!!!!!
//

// 'admin' host alias can be used to install admin related component such as 'tac'
// Usage example: install tac@admin
admin {
  //DNS name, Hostname or IP Address. If value blank uses the current host name
  host = ENV['TALEND_TAC_HOST'] ?: ""

  // For remote Linux install using ssh with user and password or ssh key
  ssh {
    user = ""
    password = ""

    // (Optional) Use sudo for the installation
    use_sudo = true

    // (Optional) Use key file instead of password. Ex: keyFile  = "c:/aws/private_key.pem"
    // Key file take precedence.
    // keyFile  = ""
  }

  // Tac Database
  // For more detail see the tac section in configuration.conf file
  database {
    // type: Supported values: 'h2', 'mariadb', 'mysql', 'oracle', sqlserver'
    type = "mysql"

    host = ENV['TALEND_TAC_DB_HOST'] ?: "localhost"
    port = ENV['TALEND_TAC_DB_PORT'] ?: 3306

    schema_service = ENV['TALEND_TAC_DB_SCHEMA'] ?: "tac"

    user =  ENV['TALEND_TAC_DB_USER'] ?: "admin"
    password = ENV['TALEND_TAC_DB_PASSWORD'] ?: "admin"

    connect_loggin_timeout = 5  // sec
  }

  // (Optional) List of shell script to execute on the remote host before and after the installation (Ex: Install JDK)
  // Scripts must be in scripts folder under pre_install or post_install folders, accordingly.
  pre_install_scripts = ["install_java8.sh"]
  post_install_scripts = []
}

// 'admin2' host alias is used to install 'tac' in HA configuration
// Usage example: install tac@admin tac@admin2
admin2 {
  //DNS name, Hostname or IP Address. If value blank uses the current host name
  host = ""

  // For remote Linux install using ssh with user and password or ssh key
  ssh {
    user = ""
    password = ""

    // (Optional) Use sudo for the installation
    use_sudo = true

    // (Optional) Use key file instead of password. Ex: keyFile  = "c:/aws/private_key.pem"
    // Key file take precedence.
    // keyFile  = ""
  }

  // Tac Database
  // &
  // Service configuration
  // are retrieved from the 'admin' host defined above

  // (Optional) List of shell script to execute on the remote host before and after the installation (Ex: Install JDK)
  // Scripts must be in scripts folder under pre_install or post_install folders, accordingly.
  pre_install_scripts = ["install_java8.sh"]
  post_install_scripts = []
}

// 'runtime' host alias can be used to install runtime related component such as 'jobserver'
// Usage example: install jobserver@runtime
runtime {
  //DNS name, Hostname or IP Address. If value blank uses the current host name
  host = ""

  // For remote Linux install using ssh with user and password or ssh key
  ssh {
    user = ""
    password = ""

    // (Optional. Recommended if installation owned by different user) Use sudo for the installation
    use_sudo = true

    // (Optional) Use key file instead of password. Ex: keyFile  = "c:/aws/private_key.pem"
    // Key file take precedence.
    // keyFile  = ""
  }

  // (Optional) List of shell script to execute on the remote host before and after the installation (Ex: Install JDK)
  // Scripts must be in scripts folder under pre_install or post_install folders, accordingly.
  pre_install_scripts = ["install_java8.sh"]
  post_install_scripts = []
}

// 'runtime2' host alias can be used to install runtime an additional jobserver on the same commandline
// Usage example: install jobserver@runtime jobserver@runtime2
runtime2 {
  //DNS name, Hostname or IP Address. If value blank uses the current host name
  host = ""

  // For remote Linux install using ssh with user and password or ssh key
  ssh {
    user = ""
    password = ""

    // (Optional. Recommended if installation owned by different user) Use sudo for the installation
    use_sudo = true

    // (Optional) Use key file instead of password. Ex: keyFile  = "c:/aws/private_key.pem"
    // Key file take precedence.
    // keyFile  = ""
  }

  // (Optional) List of shell script to execute on the remote host before and after the installation (Ex: Install JDK)
  // Scripts must be in scripts folder under pre_install or post_install folders, accordingly.
  pre_install_scripts = ["install_java8.sh"]
  post_install_scripts = []
}

// 'logging' host alias can be used to install build related component such as 'logserver', ...
// Ex Usage example: install logserver@logging
logging {
  //DNS name, Hostname or IP Address. If value blank uses the current host name
  // host = ""
  host = ENV["TALEND_LOGGING_HOST"] ?: ""

  // For remote Linux install using ssh with user and password or ssh key
  ssh {
    user = ""
    password = ""

    // (Optional. Recommended if installation owned by different user) Use sudo for the installation
    use_sudo = true

    // (Optional) Use key file instead of password. Ex: keyFile  = "c:/aws/private_key.pem"
    // Key file take precedence.
    // keyFile  = ""
  }

  // (Optional) List of shell script to execute on the remote host before and after the installation (Ex: Install JDK)
  // Scripts must be in scripts folder under pre_install or post_install folders, accordingly.
  pre_install_scripts = ["install_java8.sh"]
  post_install_scripts = []
}

// 'monitoring' host alias can be used to install build related component such as 'amc', ...
// Ex Usage example: install amc@monitoring
monitoring {
  //DNS name, Hostname or IP Address. If value blank uses the current host name
  host = ENV['TALEND_MONITORING_HOST'] ?: ""

  // For remote Linux install using ssh with user and password or ssh key
  ssh {
    user = ""
    password = ""

    // (Optional. Recommended if installation owned by different user) Use sudo for the installation
    use_sudo = true

    // (Optional) Use key file instead of password. Ex: keyFile  = "c:/aws/private_key.pem"
    // Key file take precedence.
    // keyFile  = ""
  }

  // amc Database
  // For more detail see the amc section in configuration.conf file
  database {
    // type: Supported values: "mariadb", "mysql", "oracle", sqlserver"
    type = "mysql"

    host = ENV['TALEND_AMC_DB_HOST'] ?: "localhost"
    port = ENV['TALEND_AMC_DB_PORT'] ?: 3306

    schema_service = ENV['TALEND_AMC_DB_SCHEMA'] ?: "amc"

    user = ENV['TALEND_AMC_DB_USER'] ?: "admin"
    password = ENV['TALEND_AMC_DB_PASSWORD'] ?: "admin"

    connect_loggin_timeout = 5  // sec
  }

  // (Optional) List of shell script to execute on the remote host before and after the installation (Ex: Install JDK)
  // Scripts must be in scripts folder under pre_install or post_install folders, accordingly.
  pre_install_scripts = ["install_java8.sh"]
  post_install_scripts = []
}

// 'build' host alias can be used to install build related component such as 'cmdline', 'nexus', ...
// Usage example: install cmdline@build
build {
  //DNS name, Hostname or IP Address. If value blank uses the current host name
  host = ""

  // For remote Linux install using ssh with user and password or ssh key
  ssh {
    user = ""
    password = ""

    // (Optional. Recommended if installation owned by different user) Use sudo for the installation
    use_sudo = true

    // (Optional) Use key file instead of password. Ex: keyFile  = "c:/aws/private_key.pem"
    // Key file take precedence.
    // keyFile  = ""
  }

  // (Optional) List of shell script to execute on the remote host before and after the installation (Ex: Install JDK)
  // Scripts must be in scripts folder under pre_install or post_install folders, accordingly.
  pre_install_scripts = ["install_java8.sh jdk"]
  post_install_scripts = []
}

// 'ci' host alias can be used to install Continuous Integration related component such as 'tcib', 'CMDLINE_CI', 'nexus'...
// Ex Usage example: install tcib@ci cmdline_ci@ci
ci {
  //DNS name, Hostname or IP Address. If value blank uses the current host name
  host = ""

  // For remote Linux install using ssh with user and password or ssh key
  ssh {
    user = ""
    password = ""

    // (Optional. Recommended if installation owned by different user) Use sudo for the installation
    use_sudo = true

    // (Optional) Use key file instead of password. Ex: keyFile  = "c:/aws/private_key.pem"
    // Key file take precedence.
    // keyFile  = ""
  }

  // (Optional) List of shell script to execute on the remote host before and after the installation (Ex: Install JDK)
  // Scripts must be in scripts folder under pre_install or post_install folders, accordingly.
  pre_install_scripts = ["install_java8.sh jdk", "install_git.sh"]
  post_install_scripts = []
}

// 'dq' host alias can be used to install Data Quality related component such as 'TDS', 'DATAPREP', 'DQDICT'...
// Ex Usage example: install tds@dq dqdict@dq
dq {
  //DNS name, Hostname or IP Address. If value blank uses the current host name
  host = ""

  // For remote Linux install using ssh with user and password or ssh key
  ssh {
    user = ""

    password = ""

    // (Optional) Use sudo for the installation
    use_sudo = true

    // (Optional) Use key file instead of password. Ex: keyFile  = "c:/aws/private_key.pem"
    // Key file take precedence.
//    keyFile  = ""
  }

  // DQ Databases
  // For more detail see the TDS, QADICT & DATAPREP sections in configuration.conf file
  mongodb {

    host = dq.host
    port = 27017

    //
    // !! IMPORTANT:
    // This credential is for the MongoDB admin user and password only.
    // For TDS, DATAPREP, QADICT, .. credentials, check configuration.conf
    //----------------
    // If mongodb is installed by the installer the admin user will be created
    // If mongoDB is already installed, the credential below must have admin rights.
    //
    admin_user = "AdminUser"
    admin_password = "AdminUser" // if blank, and mongoDB is installed by the installer, it will be generated

    connect_loggin_timeout = 5  // sec
  }

  // (Optional) List of shell script to execute on the remote host before and after the installation (Ex: Install JDK)
  // Scripts must be in scripts folder under pre_install or post_install folders, accordingly.
  pre_install_scripts = ["install_java8.sh"]
  post_install_scripts = []
}

// Additional host alias for the installation can be added here

